'use strict';

var _get = require('lodash/get');
var _isNil = require('lodash/isNil');
var _isFunction = require('lodash/isFunction');

var nullSelector = {
    parse: function parse() {},
    reverse: function reverse() {}
};

function wrapPath(selector) {
    if (_isFunction(selector)) return selector;

    if (_isNil(selector)) return selector;

    return function (source) {
        return _get(source, selector);
    };
}

function SwitchTransformer() {
    var cases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var parseSelector = arguments[1];
    var reverseSelector = arguments[2];

    if (!(this instanceof SwitchTransformer)) {
        return this.transform(new SwitchTransformer(cases, parseSelector, reverseSelector));
    }

    this._cases = cases;
    this._parseSelector = wrapPath(parseSelector);
    this._reverseSelector = wrapPath(reverseSelector);
}

SwitchTransformer.prototype._getParser = function (source, selector) {
    if (!selector) return nullSelector;

    var value = selector(source);
    var next = this._cases[value];

    if (next) return next;

    return this._cases['_default_'];
};

SwitchTransformer.prototype.parse = function (source) {
    var next = this._getParser(source, this._parseSelector);

    if (!next || !_isFunction(next.parse)) return void 0;

    return next.parse(source);
};

SwitchTransformer.prototype.reverse = function (source) {
    var next = this._getParser(source, this._reverseSelector);

    if (!next || !_isFunction(next.reverse)) return void 0;

    return next.reverse(source);
};

module.exports = SwitchTransformer;